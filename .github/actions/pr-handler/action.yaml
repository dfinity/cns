name: 'Pull request handler'
description: 'Action to create a pull request with the changes'

inputs:
  commit-message: 
    description: 'The commit message'
    required: true
  skip-if-empty:
    description: 'Skips the pull requests if there are no changes'
    required: false
    default: true
  branch-name: 
    description: 'Branch name to use'
    required: true
    default: 'patch'
  git-user:
    description: 'Git user to be used by commits'
    required: false
    default: 'github-actions[bot]'
  git-email:
    description: 'Git email to be used by commits'
    required: false
    default: 'github-actions[bot]@@users.noreply.github.com'
  gh-token:
    description: 'Git user token to create the pull request'
    required: true
  gh-approve-token:
    description: 'Git user token to approve the pull request'
    required: false
  auto-merge: 
    description: 'Automatically merge pull request'
    required: false
    default: false
  base-branch:
    description: 'The base branch to create the PR against'
    required: true
    default: 'main'

runs:
  using: 'composite'
  steps:
    - name: 'Update git configurations'
      id: git-config
      shell: bash
      run: |
        git config user.name "${{ inputs.git-user }}"
        git config user.email "${{ inputs.git-email }}"
    - name: 'Create temp branch name'
      id: branch-creation
      shell: bash
      run: |
        branch_suffix=$(openssl rand -hex 4)
        pr_branch_name="auto-pr/${{inputs.branch-name}}-$branch_suffix"
        echo "pr-branch-name=$pr_branch_name" >> $GITHUB_OUTPUT
        git checkout -b $pr_branch_name
    - name: 'Add and commit changes'
      id: commit-changes
      shell: bash
      run: |
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          echo "continue=true" >> $GITHUB_OUTPUT
          git commit -m "${{ inputs.commit-message }}"
        elif [ "${{ inputs.skip-if-empty }}" = "false" ]; then
          echo "continue=true" >> $GITHUB_OUTPUT
          git commit --allow-empty -m "${{ inputs.commit-message }}"
        fi
    - name: 'Create pull request'
      id: create-pr
      if: ${{ steps.commit-changes.outputs.continue }}
      shell: bash
      run: |
        echo ${{ inputs.gh-token }} | gh auth login --with-token
        git push origin ${{ steps.branch-creation.outputs.pr-branch-name }}
        gh pr create --base ${{ inputs.base-branch }} --fill --no-maintainer-edit
        gh auth logout

    # - name: Create Pull Request
    #   uses: peter-evans/create-pull-request@v5
    #   with:
    #     token: ${{ inputs.gh-token }}
    #     author: ${{ inputs.git-email }}
    #     commit-message: ${{ inputs.commit-message }}
    #     title: ${{ inputs.commit-message }}
    #     branch: 'automated-pr/changelog'
    #     branch-suffix: short-commit-hash
    #     body: |
    #       Automated pull request to update the changelogs.
    #     delete-branch: true
    #     labels: |
    #       automated pr
    #     draft: false
